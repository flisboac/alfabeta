<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.0" xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd">
    <persistence-unit name="alfabeta" transaction-type="RESOURCE_LOCAL">
        <provider>org.hibernate.ejb.HibernatePersistence</provider>
        <jta-data-source>alfabeta</jta-data-source>
        <exclude-unlisted-classes>false</exclude-unlisted-classes>
        <properties>
            <property name="hibernate.hbm2ddl.auto" value="update"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.HSQLDialect"/>
            <!--  <property name="hibernate.connection.driver_class" value="org.hsqldb.jdbcDriver"/> -->
            <property name="hibernate.connection.driver_class" value="org.postgresql.Driver"/>
            <property name="hibernate.connection.username" value="postgres"/>
            <property name="hibernate.connection.password" value="postgres"/>
            <property name="hibernate.connection.url" value="jdbc:postgresql://localhost:5432/alfabeta"/>
            <property name="hibernate.max_fetch_depth" value="3"/>
       
            <!-- cache configuration -->
            <!-- This was blowing up -v
     <property name="hibernate.ejb.classcache.org.hibernate.ejb.test.Item" value="read-write"/>
     <property name="hibernate.ejb.collectioncache.org.hibernate.ejb.test.Item.distributors" value="read-write, RegionName"/>
          		-->
            <!-- alternatively to <class> and <property> declarations, you can use a regular hibernate.cfg.xml file -->
            <!-- property name="hibernate.ejb.cfgfile" value="/org/hibernate/ejb/test/hibernate.cfg.xml"/ -->
        </properties>
    </persistence-unit>
</persistence>
